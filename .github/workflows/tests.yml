name: Tests

on:
  push:
    branches:
      - "**"
  pull_request:
  workflow_call:

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./api

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: livrolog_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      redis:
        image: redis:7.0
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, pdo_sqlite, zip, gmp, redis
          tools: composer:v2

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: |
            api/vendor
            ~/.composer/cache
          key: composer-tests-${{ runner.os }}-${{ hashFiles('api/composer.lock') }}
          restore-keys: |
            composer-tests-${{ runner.os }}-
            composer-${{ runner.os }}-
            composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction --optimize-autoloader --ignore-platform-reqs

      - name: Copy .env file
        run: cp .env.example .env

      - name: Generate encryption key
        run: php artisan key:generate --ansi

      - name: Directory Permissions
        run: chmod -R 755 storage bootstrap/cache

      - name: Create SQLite database
        run: touch database/database.sqlite

      - name: Run database migrations
        run: php artisan migrate:fresh --force --env=testing

      - name: Seed test database
        run: php artisan db:seed --env=testing

      - name: Run PHPUnit tests (optimized)
        run: |
          # Skip coverage on non-main branches for speed
          if [[ "${{ github.ref }}" == "refs/heads/main" || "${{ github.event_name }}" == "pull_request" ]]; then
            php artisan test --coverage --min=70
          else
            php artisan test --parallel
          fi

      - name: Test database rollback
        run: php artisan migrate:rollback --force --env=testing

  integration-tests:
    runs-on: ubuntu-latest
    needs: backend-tests
    
    defaults:
      run:
        working-directory: ./api

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_sqlite, zip, gmp
          tools: composer:v2

      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction --optimize-autoloader --ignore-platform-reqs

      - name: Copy .env file
        run: cp .env.example .env

      - name: Generate encryption key
        run: php artisan key:generate --ansi

      - name: Test API endpoints health check
        run: |
          php artisan serve --port=8000 &
          sleep 5
          
          # Test basic endpoints
          curl -f http://localhost:8000/api/health || echo "::warning::Health endpoint failed"
          curl -f http://localhost:8000/api/books || echo "::warning::Books endpoint failed"
          
          # Stop the server
          pkill -f "php artisan serve"