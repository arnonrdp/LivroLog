name: Post Deploy Configuration

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

jobs:
  configure:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Configure Production Environment
        if: inputs.environment == 'Production'
        uses: appleboy/ssh-action@f9010ff7f1bbd7db1a0b4bab661437550cea20c0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # Update production .env with secrets
            cat > /var/www/livrolog/shared/.env << 'EOF'
            APP_NAME=LivroLog
            APP_ENV=production
            APP_DEBUG=false
            APP_KEY=${{ secrets.APP_KEY }}
            APP_URL=https://api.livrolog.com
            APP_FRONTEND_URL=https://livrolog.com

            DB_CONNECTION=mysql
            DB_HOST=localhost
            DB_PORT=3306
            DB_DATABASE=livrolog
            DB_USERNAME=root
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}

            REDIS_HOST=127.0.0.1
            REDIS_PORT=6379
            REDIS_PASSWORD=null

            MAIL_MAILER=ses
            MAIL_FROM_ADDRESS=noreply@livrolog.com
            MAIL_FROM_NAME=LivroLog

            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION=us-east-1
            AWS_SES_REGION=us-east-1

            SESSION_DRIVER=file
            CACHE_DRIVER=file
            QUEUE_CONNECTION=database

            LOG_CHANNEL=daily
            LOG_LEVEL=error

            GOOGLE_BOOKS_API_KEY=${{ secrets.GOOGLE_BOOKS_API_KEY || '' }}
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID || '' }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET || '' }}

            AMAZON_PA_API_ENABLED=false
            AMAZON_SITESTRIPE_ENABLED=true
            OPEN_LIBRARY_ENABLED=true
            EOF

            # Fix Apache ServerName
            sudo sed -i "s/ServerName .*/ServerName ${{ secrets.SERVER_HOST }}/" /opt/bitnami/apache2/conf/vhosts/livrolog.conf

            # Clear caches
            cd /var/www/livrolog/current/api
            php artisan cache:clear
            php artisan books:cache-clear
            php artisan config:clear

      - name: Configure Development Environment
        if: inputs.environment == 'Development'
        uses: appleboy/ssh-action@f9010ff7f1bbd7db1a0b4bab661437550cea20c0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # Update dev .env with secrets
            cat > /var/www/livrolog-dev/shared/.env.dev << 'EOF'
            APP_NAME=LivroLog
            APP_ENV=development
            APP_DEBUG=true
            APP_KEY=${{ secrets.APP_KEY }}
            APP_URL=https://api.dev.livrolog.com
            APP_FRONTEND_URL=https://dev.livrolog.com

            DB_CONNECTION=mysql
            DB_HOST=localhost
            DB_PORT=3306
            DB_DATABASE=livrolog_dev
            DB_USERNAME=root
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}

            REDIS_HOST=127.0.0.1
            REDIS_PORT=6379
            REDIS_PASSWORD=null

            MAIL_MAILER=ses
            MAIL_FROM_ADDRESS=noreply@livrolog.com
            MAIL_FROM_NAME="LivroLog Dev"

            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION=us-east-1
            AWS_SES_REGION=us-east-1

            SESSION_DRIVER=file
            CACHE_DRIVER=file
            QUEUE_CONNECTION=database

            LOG_CHANNEL=daily
            LOG_LEVEL=debug

            GOOGLE_BOOKS_API_KEY=${{ secrets.GOOGLE_BOOKS_API_KEY || '' }}
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID || '' }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET || '' }}

            AMAZON_PA_API_ENABLED=false
            AMAZON_SITESTRIPE_ENABLED=true
            OPEN_LIBRARY_ENABLED=true
            EOF

            # Clear caches
            cd /var/www/livrolog-dev/current/api
            php artisan cache:clear
            php artisan books:cache-clear
            php artisan config:clear

      - name: Restart Apache
        uses: appleboy/ssh-action@f9010ff7f1bbd7db1a0b4bab661437550cea20c0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            sudo /opt/bitnami/ctlscript.sh restart apache

  restart-queue-workers:
    name: Restart Queue Workers
    runs-on: ubuntu-latest
    needs: [configure]
    environment: ${{ inputs.environment }}

    steps:
      - name: Restart Laravel queue workers (Production)
        if: inputs.environment == 'Production'
        uses: appleboy/ssh-action@f9010ff7f1bbd7db1a0b4bab661437550cea20c0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e
            if [ -d "/var/www/livrolog/current/api" ]; then
              echo "🔄 Restarting Production queue workers..."
              cd /var/www/livrolog/current/api
              php artisan queue:restart || true
              echo "✅ Queue restart signal sent"
              echo "📋 Current workers (if any):"
              ps aux | grep "queue:work" | grep -v grep | grep -v bash || echo "No running workers found"
            else
              echo "⚠️ Production path not found: /var/www/livrolog/current/api"
            fi

      - name: Restart Laravel queue workers (Development)
        if: inputs.environment == 'Development'
        uses: appleboy/ssh-action@f9010ff7f1bbd7db1a0b4bab661437550cea20c0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e
            if [ -d "/var/www/livrolog-dev/current/api" ]; then
              echo "🔄 Restarting Development queue workers..."
              cd /var/www/livrolog-dev/current/api
              php artisan queue:restart || true
              echo "✅ Queue restart signal sent"
              echo "📋 Current workers (if any):"
              ps aux | grep "queue:work" | grep -v grep | grep -v bash || echo "No running workers found"
            else
              echo "⚠️ Development path not found: /var/www/livrolog-dev/current/api"
            fi
