# docker-compose.dev.yml
# Development Docker Compose with internal MySQL and Redis containers
# Comments in English only

name: livrolog_dev

services:
  # MySQL Database (development)
  mysql:
    image: mysql:8.0
    container_name: livrolog-mysql-dev
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD:-supersecret}'
      MYSQL_DATABASE: '${DB_DATABASE:-livrolog_dev}'
      MYSQL_USER: '${DB_USERNAME:-livrolog}'
      MYSQL_PASSWORD: '${DB_PASSWORD:-supersecret}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    ports:
      - "127.0.0.1:3307:3306" # Different port to avoid conflicts
    volumes:
      - /var/www/livrolog-dev/shared/db:/var/lib/mysql
    networks:
      - livrolog-dev-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 60s

  # Redis Cache (development)
  redis:
    image: redis:7-alpine
    container_name: livrolog-redis-dev
    restart: always
    ports:
      - "127.0.0.1:6380:6379" # Different port to avoid conflicts
    networks:
      - livrolog-dev-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 30s

  # Laravel API with PHP-FPM
  api:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER:-owner}/livrolog-api:${TAG:-dev}
    container_name: livrolog-api-dev
    restart: always
    env_file:
      - /var/www/livrolog-dev/shared/.env.dev # Development env file
    environment:
      # Use containerized services
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE:-livrolog_dev}
      - DB_USERNAME=${DB_USERNAME:-livrolog}
      - DB_PASSWORD=${DB_PASSWORD:-supersecret}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "127.0.0.1:8081:8080"
    volumes:
      # Mount shared storage from dev deployment
      - /var/www/livrolog-dev/shared/storage:/var/www/html/storage
      - /var/www/livrolog-dev/shared/.env.dev:/var/www/html/.env
    networks:
      - livrolog-dev-net
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8080/healthz"]
      interval: 15s
      timeout: 10s
      retries: 30
      start_period: 120s

  # Vue/Quasar WebApp served by Nginx
  web:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER:-owner}/livrolog-web:${TAG:-dev}
    container_name: livrolog-web-dev
    restart: always
    ports:
      - "127.0.0.1:8080:80" # Development web port
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost/healthz"]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 30s
    depends_on:
      api:
        condition: service_healthy
    networks:
      - livrolog-dev-net

networks:
  livrolog-dev-net:
    name: livrolog-dev-net
    driver: bridge