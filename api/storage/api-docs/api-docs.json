{
    "openapi": "3.0.0",
    "info": {
        "title": "LivroLog API",
        "description": "Personal library management system with Google Books API integration",
        "contact": {
            "email": "support@livrolog.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "LivroLog API Server"
        }
    ],
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register new user",
                "description": "Creates a new user account and returns access token",
                "operationId": "registerUser",
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "display_name",
                                    "email",
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "display_name": {
                                        "description": "User display name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "User email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "username": {
                                        "description": "Unique username",
                                        "type": "string",
                                        "example": "john_doe"
                                    },
                                    "password": {
                                        "description": "Password (minimum 8 characters)",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "shelf_name": {
                                        "description": "Shelf name (optional)",
                                        "type": "string",
                                        "example": "John's Library"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "1|aBcDeF123456..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticates user and returns access token",
                "operationId": "loginUser",
                "requestBody": {
                    "description": "Login credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "description": "User password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "1|aBcDeF123456..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Invalidates the current access token",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get current user",
                "description": "Returns the authenticated user information",
                "operationId": "getCurrentUser",
                "responses": {
                    "200": {
                        "description": "User information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/password": {
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Update user password",
                "description": "Updates the authenticated user's password",
                "operationId": "updatePassword",
                "requestBody": {
                    "description": "Password update data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "current_password": {
                                        "description": "Current password",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password": {
                                        "description": "New password",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "description": "New password confirmation",
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send password reset link",
                "description": "Sends a password reset link to the user's email",
                "operationId": "forgotPassword",
                "requestBody": {
                    "description": "Email address",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset link sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset link sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error sending password reset link",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unable to send password reset link."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset user password",
                "description": "Resets the user's password using the token received via email",
                "operationId": "resetPassword",
                "requestBody": {
                    "description": "Password reset data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "token": {
                                        "description": "Password reset token",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "User email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "description": "New password",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "description": "New password confirmation",
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error resetting password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unable to reset password."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/google": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Redirect to Google OAuth",
                "description": "Redirects user to Google for OAuth authentication",
                "operationId": "googleRedirect",
                "responses": {
                    "302": {
                        "description": "Redirect to Google OAuth URL"
                    }
                }
            },
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Google Sign In with ID Token",
                "description": "Authenticates user using Google ID Token for frontend integration",
                "operationId": "googleSignIn",
                "requestBody": {
                    "description": "Google ID Token",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id_token"
                                ],
                                "properties": {
                                    "id_token": {
                                        "description": "Google ID Token from frontend",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Authentication successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid Google ID Token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/google/callback": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Google OAuth callback",
                "description": "Handles Google OAuth callback and creates/authenticates user",
                "operationId": "googleCallback",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Authorization code from Google",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "OAuth error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OAuth authentication failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/authors/merge": {
            "post": {
                "tags": [
                    "Authors"
                ],
                "summary": "Merge two duplicate authors into one",
                "description": "Moves all books from the source author to the target author and deletes the duplicate author. **Admin access required.**",
                "operationId": "d25e7ab98ccb891844da86916cce44b9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "from_author_id",
                                    "to_author_id"
                                ],
                                "properties": {
                                    "from_author_id": {
                                        "description": "ID of the duplicate author to be merged (will be deleted)",
                                        "type": "string",
                                        "example": "A-9IO8-3D6Y"
                                    },
                                    "to_author_id": {
                                        "description": "ID of the main author to keep",
                                        "type": "string",
                                        "example": "A-1ABC-2DEF"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Authors merged successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Authors merged successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Access denied. Admin privileges required."
                    },
                    "422": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/books": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "List books",
                "description": "Returns paginated list of books",
                "operationId": "getBooks",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Books list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Book"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/showcase": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "List featured books for showcase",
                "description": "Returns list of featured books for public display",
                "operationId": "getShowcase",
                "responses": {
                    "200": {
                        "description": "Featured books list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Showcase"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/books/{id}": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get book details",
                "description": "Returns a single book by its custom ID.",
                "operationId": "getBookById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Book ID (e.g. B-3D6Y-9IO8)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "B-3D6Y-9IO8"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/books/search": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Search books in Google Books API",
                "description": "Searches books in Google Books API using search terms",
                "operationId": "searchBooks",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term (minimum 3 characters)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "tolkien"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "books": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "google_id": {
                                                        "type": "string",
                                                        "example": "YvkTEAAAQBAJ"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "The Hobbit"
                                                    },
                                                    "authors": {
                                                        "type": "string",
                                                        "example": "J.R.R. Tolkien"
                                                    },
                                                    "isbn": {
                                                        "type": "string",
                                                        "example": "9788595084988"
                                                    },
                                                    "thumbnail": {
                                                        "type": "string",
                                                        "example": "https://books.google.com/..."
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "publisher": {
                                                        "type": "string",
                                                        "example": "HarperCollins"
                                                    },
                                                    "language": {
                                                        "type": "string",
                                                        "example": "en"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Invalid search term"
                    },
                    "500": {
                        "description": "Search error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/books/read-dates": {
            "patch": {
                "tags": [
                    "Books"
                ],
                "summary": "Update read dates for multiple books",
                "description": "Updates read dates for multiple books for the authenticated user",
                "operationId": "updateReadDates",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "books": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "readIn": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-07-10"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Read dates updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Read dates updated successfully"
                                        },
                                        "updated": {
                                            "type": "integer",
                                            "example": 4
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Book": {
                "title": "Book",
                "description": "Book model",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "B-3D6Y-9IO8"
                    },
                    "isbn": {
                        "type": "string",
                        "example": "9788533613379"
                    },
                    "title": {
                        "type": "string",
                        "example": "The Lord of the Rings"
                    },
                    "authors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "J.R.R. Tolkien"
                        ]
                    },
                    "thumbnail": {
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    },
                    "language": {
                        "type": "string",
                        "example": "pt-BR"
                    },
                    "publisher": {
                        "type": "string",
                        "example": "HarperCollins"
                    },
                    "edition": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Showcase": {
                "title": "Showcase",
                "description": "Showcase book model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "The Lord of the Rings"
                    },
                    "authors": {
                        "type": "string",
                        "example": "J.R.R. Tolkien"
                    },
                    "isbn": {
                        "type": "string",
                        "example": "9788533613379"
                    },
                    "description": {
                        "type": "string"
                    },
                    "thumbnail": {
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    },
                    "link": {
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    },
                    "publisher": {
                        "type": "string",
                        "example": "HarperCollins"
                    },
                    "language": {
                        "type": "string",
                        "example": "en"
                    },
                    "edition": {
                        "type": "string",
                        "nullable": true
                    },
                    "order_index": {
                        "type": "integer",
                        "example": 1
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "U-1ABC-2DEF"
                    },
                    "google_id": {
                        "type": "string",
                        "example": "123456789012345678901",
                        "nullable": true
                    },
                    "display_name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "username": {
                        "type": "string",
                        "example": "john_doe"
                    },
                    "avatar": {
                        "type": "string",
                        "example": "https://lh3.googleusercontent.com/...",
                        "nullable": true
                    },
                    "shelf_name": {
                        "type": "string",
                        "example": "John's Library"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "admin",
                            "user"
                        ],
                        "example": "user"
                    },
                    "email_verified": {
                        "type": "boolean",
                        "example": false
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Insert the access token obtained from login endpoint. Format: Bearer {token}",
                "bearerFormat": "Token",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "User authentication endpoints"
        },
        {
            "name": "Books",
            "description": "Book management"
        },
        {
            "name": "Authors",
            "description": "Authors"
        }
    ]
}