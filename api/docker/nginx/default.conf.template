server {
    listen 80;
    index index.php index.html;
    root /var/www/html/public;

    # Ensure API user assets are not captured by crawler rule below
    # Specific shelf-image endpoint
    location ~ ^/users/[^/]+/shelf-image(\?.*)?$ {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Ensure API endpoints under /user/ are not mistaken for usernames
    location ^~ /user/ {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ^~ /users/ {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Ensure top-level API resources are handled before regex username matcher
    location ^~ /books {
        try_files $uri $uri/ /index.php?$query_string;
    }
    location ^~ /auth {
        try_files $uri $uri/ /index.php?$query_string;
    }
    location ^~ /image-proxy {
        try_files $uri $uri/ /index.php?$query_string;
    }
    location ^~ /reviews {
        try_files $uri $uri/ /index.php?$query_string;
    }
    location ^~ /follow-requests {
        try_files $uri $uri/ /index.php?$query_string;
    }
    location ^~ /health {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Ensure direct /index.php is handled by PHP before regex locations
    location = /index.php {
        fastcgi_pass api:9000;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    # Generic user profile route handler for crawlers (any single path segment)
    # Single-segment usernames WITHOUT dots to avoid catching files like index.php
    # Exclude top-level API paths (books, auth, image-proxy, reviews, follow-requests, health)
    location ~ ^/(?!assets|users|user|books|auth|image-proxy|reviews|follow-requests|health|api|login|register|reset-password|documentation|privacy|terms|sitemap\.xml|robots\.txt)([A-Za-z0-9_\-]+)/?$ {
        if ($http_user_agent ~* "facebookexternalhit|facebookcatalog|twitterbot|linkedinbot|whatsapp|telegram(bot)?|slack(-imgproxy|-bot|bot)?|discordbot|skypeuripreview|applebot|google(bot|-inspectiontool)|bingbot|yahoo!|pinterest(bot)?|reddit(bot)?|embedly|vkshare|qwantify|bitlybot|bufferbot|iframely|opengraph|lighthouse|pagespeed|duckduckbot|baiduspider|yandex(bot)?") {
            rewrite ^(.*)$ /index.php last;
        }
        return 302 ${APP_FRONTEND_URL}$request_uri;
    }

    # Homepage OG for crawlers
    location = / {
        if ($http_user_agent ~* "facebookexternalhit|facebookcatalog|twitterbot|linkedinbot|whatsapp|telegram(bot)?|slack(-imgproxy|-bot|bot)?|discordbot|skypeuripreview|applebot|google(bot|-inspectiontool)|bingbot|yahoo!|pinterest(bot)?|reddit(bot)?|embedly|vkshare|qwantify|bitlybot|bufferbot|iframely|opengraph|lighthouse|pagespeed|duckduckbot|baiduspider|yandex(bot)?") {
            rewrite ^(.*)$ /index.php last;
        }
        try_files $uri $uri/ /index.php?$query_string;
    }

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass api:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }
}
