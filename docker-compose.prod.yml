# docker-compose.prod.yml
# Production Docker Compose with internal MariaDB and Redis
# Comments in English only

name: livrolog

services:
  # MariaDB Database (internal, no exposed ports)
  mariadb:
    image: mariadb:10.11-jammy
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    networks:
      - livrolog-net
    volumes:
      - /var/www/livrolog/shared/db:/var/lib/mysql
    healthcheck:
      # Uses root user since DB_USERNAME defaults to 'root' in this deployment
      # For non-root users, use: mysql --silent --connect-timeout=5 -u $MYSQL_USER -p$MYSQL_PASSWORD -e 'SELECT 1'
      test: ["CMD-SHELL", "mysql --silent --connect-timeout=3 -u root -p$$MYSQL_ROOT_PASSWORD -e 'SELECT 1' >/dev/null 2>&1"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 30s

  # Redis Cache (internal, no exposed ports)
  redis:
    image: redis:7-alpine
    restart: always
    networks:
      - livrolog-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 2s
      retries: 10
      start_period: 5s

  # Laravel API with Nginx + PHP-FPM (serves on port 8080)
  api:
    image: ghcr.io/${OWNER:-arnonrdp}/livrolog-api:${TAG:-prod}
    restart: always
    environment:
      # Use containerized services
      - DB_HOST=mariadb
      - DB_PORT=3306
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "127.0.0.1:18081:8080"
    networks:
      - livrolog-net
    volumes:
      # Mount shared storage and .env from existing deployment
      - /var/www/livrolog/shared/storage:/var/www/html/storage
      - /var/www/livrolog/shared/.env:/var/www/html/.env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      # Simplified healthcheck using curl to test if nginx is responding
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 60s

  # Vue/Quasar WebApp served by Nginx
  web:
    image: ghcr.io/${OWNER:-arnonrdp}/livrolog-web:${TAG:-prod}
    restart: always
    ports:
      - "127.0.0.1:18080:80"
    networks:
      - livrolog-net
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -fsS http://localhost/healthz"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 30s

networks:
  livrolog-net:
    name: livrolog-net
    driver: bridge